@utility prose {
  --tw-prose-body: var(--color-stone-700);
  --tw-prose-headings: var(--color-stone-900);
  --tw-prose-lead: var(--color-stone-600);
  --tw-prose-links: var(--color-stone-900);
  --tw-prose-bold: var(--color-stone-900);
  --tw-prose-counters: var(--color-stone-500);
  --tw-prose-bullets: var(--color-stone-300);
  --tw-prose-hr: var(--color-stone-200);
  --tw-prose-quotes: var(--color-stone-900);
  --tw-prose-quote-borders: var(--color-stone-200);
  --tw-prose-captions: var(--color-stone-500);
  --tw-prose-kbd: var(--color-stone-900);
  --tw-prose-kbd-shadows: --alpha(var(--color-stone-900) / 10%);
  --tw-prose-code: var(--color-stone-900);
  --tw-prose-pre-code: var(--color-stone-200);
  --tw-prose-pre-bg: var(--color-stone-800);
  --tw-prose-th-borders: var(--color-stone-300);
  --tw-prose-td-borders: var(--color-stone-200);
  --tw-prose-invert-body: var(--color-stone-300);
  --tw-prose-invert-headings: var(--color-white);
  --tw-prose-invert-lead: var(--color-stone-400);
  --tw-prose-invert-links: var(--color-white);
  --tw-prose-invert-bold: var(--color-white);
  --tw-prose-invert-counters: var(--color-stone-400);
  --tw-prose-invert-bullets: var(--color-stone-600);
  --tw-prose-invert-hr: var(--color-stone-700);
  --tw-prose-invert-quotes: var(--color-stone-100);
  --tw-prose-invert-quote-borders: var(--color-stone-700);
  --tw-prose-invert-captions: var(--color-stone-400);
  --tw-prose-invert-kbd: var(--color-white);
  --tw-prose-invert-kbd-shadows: --alpha(var(--color-white) / 10%);
  --tw-prose-invert-code: var(--color-white);
  --tw-prose-invert-pre-code: var(--color-stone-300);
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: var(--color-stone-600);
  --tw-prose-invert-td-borders: var(--color-stone-700);
  font-size: 0.75rem;
  line-height: 1.25;
  color: var(--tw-prose-body);

  :where(p) {
    margin-top: 0.25em;
    margin-bottom: 0.25em;
  }

  :where([class~="lead"]) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  :where(a) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
  }

  :where(strong) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }

  :where(a strong) {
    color: inherit;
  }

  :where(blockquote strong) {
    color: inherit;
  }

  :where(thead th strong) {
    color: inherit;
  }

  :where(ol) {
    list-style-type: decimal;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }

  :where(ol[type="A"]) {
    list-style-type: upper-alpha;
  }

  :where(ol[type="a"]) {
    list-style-type: lower-alpha;
  }

  :where(ol[type="I"]) {
    list-style-type: upper-roman;
  }

  :where(ol[type="i"]) {
    list-style-type: lower-roman;
  }

  :where(ol[type="1"]) {
    list-style-type: decimal;
  }

  :where(ul) {
    list-style-type: disc;
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
  }

  :where(ol > li)::marker {
    font-weight: 400;
    color: var(--tw-prose-counters);
  }

  :where(ul > li)::marker {
    color: var(--tw-prose-bullets);
  }

  :where(dt) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.25em;
  }

  :where(hr) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }

  :where(blockquote) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-inline-start-width: 0.25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "\201C""\201D""\2018""\2019";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
  }

  :where(blockquote p:first-of-type)::before {
    content: open-quote;
  }

  :where(blockquote p:last-of-type)::after {
    content: close-quote;
  }

  :where(h1) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  :where(h1 strong) {
    font-weight: 900;
    color: inherit;
  }

  :where(h2) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }

  :where(h2 strong) {
    font-weight: 800;
    color: inherit;
  }

  :where(h3) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  :where(h3 strong) {
    font-weight: 700;
    color: inherit;
  }

  :where(h4) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }

  :where(h4 strong) {
    font-weight: 700;
    color: inherit;
  }

  :where(img) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  :where(picture) {
    display: block;
    margin-top: 2em;
    margin-bottom: 2em;
  }

  :where(video) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  :where(kbd) {
    font-weight: 500;
    font-family: inherit;
    color: var(--tw-prose-kbd);
    box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
    font-size: 0.875em;
    border-radius: 0.3125rem;
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    padding-inline-start: 0.375em;
  }

  :where(code) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: 0.875em;
  }

  :where(code)::before {
    content: "`";
  }

  :where(code)::after {
    content: "`";
  }

  :where(a code) {
    color: inherit;
  }

  :where(h1 code) {
    color: inherit;
  }

  :where(h2 code) {
    color: inherit;
    font-size: 0.875em;
  }

  :where(h3 code) {
    color: inherit;
    font-size: 0.9em;
  }

  :where(h4 code) {
    color: inherit;
  }

  :where(blockquote code) {
    color: inherit;
  }

  :where(thead th code) {
    color: inherit;
  }

  :where(pre) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-inline-end: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-inline-start: 1.1428571em;
  }

  :where(pre code) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }

  :where(pre code)::before {
    content: none;
  }

  :where(pre code)::after {
    content: none;
  }

  :where(table) {
    width: 100%;
    table-layout: auto;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }

  :where(thead) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }

  :where(thead th) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }

  :where(tbody tr) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }

  :where(tbody tr:last-child) {
    border-bottom-width: 0;
  }

  :where(tbody td) {
    vertical-align: baseline;
  }

  :where(tfoot) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }

  :where(tfoot td) {
    vertical-align: top;
  }

  :where(th, td) {
    text-align: start;
  }

  :where(figure > *) {
    margin-top: 0;
    margin-bottom: 0;
  }

  :where(figcaption) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }

  :where(picture > img) {
    margin-top: 0;
    margin-bottom: 0;
  }

  :where(li) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  :where(ol > li) {
    padding-inline-start: 0.375em;
  }

  :where(ul > li) {
    padding-inline-start: 0.375em;
  }

  :where(& > ul > li p) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  :where(& > ul > li > p:first-child) {
    margin-top: 1.25em;
  }

  :where(& > ul > li > p:last-child) {
    margin-bottom: 1.25em;
  }

  :where(& > ol > li > p:first-child) {
    margin-top: 1.25em;
  }

  :where(& > ol > li > p:last-child) {
    margin-bottom: 1.25em;
  }

  :where(ul ul, ul ol, ol ul, ol ol) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  :where(dl) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  :where(dd) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }

  :where(hr + *) {
    margin-top: 0;
  }

  :where(h2 + *) {
    margin-top: 0;
  }

  :where(h3 + *) {
    margin-top: 0;
  }

  :where(h4 + *) {
    margin-top: 0;
  }

  :where(thead th:first-child) {
    padding-inline-start: 0;
  }

  :where(thead th:last-child) {
    padding-inline-end: 0;
  }

  :where(tbody td, tfoot td) {
    padding-top: 0.5714286em;
    padding-inline-end: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-inline-start: 0.5714286em;
  }

  :where(tbody td:first-child, tfoot td:first-child) {
    padding-inline-start: 0;
  }

  :where(tbody td:last-child, tfoot td:last-child) {
    padding-inline-end: 0;
  }

  :where(figure) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  :where(& > :first-child) {
    margin-top: 0;
  }

  :where(& > :last-child) {
    margin-bottom: 0;
  }

  @variant dark {
    --tw-prose-body: var(--tw-prose-invert-body);
    --tw-prose-headings: var(--tw-prose-invert-headings);
    --tw-prose-lead: var(--tw-prose-invert-lead);
    --tw-prose-links: var(--tw-prose-invert-links);
    --tw-prose-bold: var(--tw-prose-invert-bold);
    --tw-prose-counters: var(--tw-prose-invert-counters);
    --tw-prose-bullets: var(--tw-prose-invert-bullets);
    --tw-prose-hr: var(--tw-prose-invert-hr);
    --tw-prose-quotes: var(--tw-prose-invert-quotes);
    --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
    --tw-prose-captions: var(--tw-prose-invert-captions);
    --tw-prose-kbd: var(--tw-prose-invert-kbd);
    --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
    --tw-prose-code: var(--tw-prose-invert-code);
    --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
    --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
    --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
    --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
  }
}
